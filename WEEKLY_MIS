{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMcFrUiDNse5kqLBZGoqQF2",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sanjayvnit108/Python/blob/main/WEEKLY_MIS\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UQpcsTlDdA_n"
      },
      "source": [
        "import openpyxl, os, csv, shutil\r\n",
        "import pandas as pd\r\n",
        "import numpy as np\r\n",
        "total = 302\r\n",
        "outputFile = open('NEW.csv','w',newline='')\r\n",
        "outputWriter = csv.writer(outputFile)\r\n",
        "exampleFile = open('CumulativePumpTankOfflineHistoryReportROCode.csv')\r\n",
        "exampleReader = csv.reader(exampleFile)\r\n",
        "for row in exampleReader:\r\n",
        "    if exampleReader.line_num>4:\r\n",
        "        outputWriter.writerow(row)\r\n",
        "    continue\r\n",
        "outputFile.close()\r\n",
        "exampleFile.close()\r\n",
        "df1 = pd.read_csv('CumulativeOfflineDuration.csv')\r\n",
        "df2 = pd.ExcelWriter('CumulativeOfflineDuration.xlsx')\r\n",
        "df1.to_excel(df2, index = False)\r\n",
        "df2.save()\r\n",
        "df1 = pd.read_csv('NEW.csv')\r\n",
        "df2 = pd.ExcelWriter('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "df1.to_excel(df2, index = False)\r\n",
        "df2.save()\r\n",
        "wb2=openpyxl.load_workbook('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "sheet2=wb2['Sheet1']\r\n",
        "sheet2.delete_cols(1,2)\r\n",
        "sheet2.delete_cols(7,13)\r\n",
        "sheet2.delete_cols(8,12)\r\n",
        "sheet2['G1'].value= 'Status ' + sheet2['F2'].value\r\n",
        "status = sheet2['G1'].value\r\n",
        "sheet2.delete_cols(6,1)\r\n",
        "wb2.save('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "wb1=openpyxl.load_workbook('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "sheet1=wb1['Sheet1']\r\n",
        "sheet1.delete_cols(6,1)\r\n",
        "wb1.save('working.xlsx')\r\n",
        "sales = pd.read_excel('SALESDAILYMIS.xlsx')\r\n",
        "working = pd.read_excel('working.xlsx')\r\n",
        "df_1 = pd.merge(working, sales[['ROCode','MS Stock']], on = 'ROCode', how='left')\r\n",
        "df_2 = pd.merge(df_1, sales[['ROCode','HSD Stock']], on = 'ROCode', how='left')\r\n",
        "df_3 = pd.merge(df_2, sales[['ROCode','Power Stock']], on = 'ROCode', how='left')\r\n",
        "df_4 = pd.merge(df_3, sales[['ROCode','Product']], on = 'ROCode', how='left')\r\n",
        "df_4.to_excel('working.xlsx')\r\n",
        "nano = pd.read_excel('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "hos = pd.read_excel('CumulativeOfflineDuration.xlsx')\r\n",
        "working = pd.read_excel('working.xlsx')\r\n",
        "df_1 = pd.merge(working, nano[['ROCode',status]], on = 'ROCode', how='left')\r\n",
        "df_2 = pd.merge(df_1, hos[['ROCode','LastROCDate']], on = 'ROCode', how='left')\r\n",
        "df_2.to_excel('working.xlsx')\r\n",
        "wb = openpyxl.load_workbook('working.xlsx')\r\n",
        "ws=wb['Sheet1']\r\n",
        "for i in range(2,total):\r\n",
        "    if ws.cell(row=i, column=13).value==None:\r\n",
        "       ws.cell(row=i, column=13).value = \"HOS_Connected\"\r\n",
        "       if ws.cell(row=i, column=12).value ==\"Fully Communicated\":\r\n",
        "          ws.cell(row=i, column=14).value=\"Automation OK\"\r\n",
        "          continue\r\n",
        "       ws.cell(row=i, column=14).value=\"Problem\"\r\n",
        "       continue\r\n",
        "    ws.cell(row=i, column=14).value=\"Problem\"\r\n",
        "ws.delete_cols(1,2)\r\n",
        "wb.save('working.xlsx')\r\n",
        "df1 = pd.read_csv('CumulativeTotvsTankSalesReportDailyROCode.csv')\r\n",
        "df2 = pd.ExcelWriter('CumulativeTotvsTankSalesReportDailyROCode.xlsx')\r\n",
        "df1.to_excel(df2, index = False)\r\n",
        "df2.save()\r\n",
        "data = pd.read_excel(\"CumulativeTotvsTankSalesReportDailyROCode.xlsx\")\r\n",
        "speciesdata = data[\"Product2\"].unique() \r\n",
        "for i in speciesdata: \r\n",
        "    a = data[data[\"Product2\"].str.contains(i)] \r\n",
        "    a.to_excel(i+\".xlsx\")\r\n",
        "dailysales = pd.read_excel('working.xlsx')\r\n",
        "dailyMS = pd.read_excel('MS.xlsx')\r\n",
        "dailyHSD = pd.read_excel('HSD.xlsx')\r\n",
        "dailyPOWER = pd.read_excel('Power.xlsx')\r\n",
        "df_1 = pd.merge(dailysales, dailyMS[['ROCode','NetTotalizerSales']], on = 'ROCode', how='left')\r\n",
        "df_2 = pd.merge(df_1, dailyHSD[['ROCode','NetTotalizerSales']], on = 'ROCode', how='left')\r\n",
        "df_3 = pd.merge(df_2, dailyPOWER[['ROCode','NetTotalizerSales']], on = 'ROCode', how='left')\r\n",
        "df_3.to_excel('working.xlsx')\r\n",
        "wb = openpyxl.load_workbook('working.xlsx')\r\n",
        "ws = wb['Sheet1']\r\n",
        "ws.delete_cols(1,1)\r\n",
        "ws['L1'].value = \"NANO Status\"\r\n",
        "ws['M1'].value = \"MS\"\r\n",
        "ws['N1'].value = \"HSD\"\r\n",
        "ws['O1'].value = \"POWER\"\r\n",
        "ws['P1'].value = \"Automation Status\"\r\n",
        "for i in range(2,total):\r\n",
        "    ws.cell(row=i, column=16).value = ws.cell(row=i, column=12).value        \r\n",
        "    for j in range(6,9):\r\n",
        "        k = 7 + j\r\n",
        "        if ws.cell(row=i, column=k).value == None:\r\n",
        "            if ws.cell(row=i, column=j).value == None:\r\n",
        "                continue\r\n",
        "            ws.cell(row=i, column=k).value = \"Problem\"\r\n",
        "            ws.cell(row=i, column=16).value = \"Problem\"\r\n",
        "            continue\r\n",
        "        continue\r\n",
        "    continue\r\n",
        "wb.save('working.xlsx')\r\n",
        "df_1 = pd.read_excel('working.xlsx')\r\n",
        "automation = pd.read_excel('Automation.xlsx')\r\n",
        "df_2 = pd.merge(df_1, automation[['ROCode','Remarks']], on = 'ROCode', how='left')\r\n",
        "df_3 = pd.merge(df_2, automation[['ROCode','Dependency']], on = 'ROCode', how='left')\r\n",
        "df_4 = pd.merge(df_3, automation[['ROCode','Action Plan']], on = 'ROCode', how='left')\r\n",
        "df_5 = pd.merge(df_4, automation[['ROCode','Commitment Date']], on = 'ROCode', how='left')\r\n",
        "df_5.to_excel('working.xlsx')\r\n",
        "os.remove(\"Automation.xlsx\")\r\n",
        "wb = openpyxl.load_workbook('working.xlsx')\r\n",
        "ws = wb['Sheet1']\r\n",
        "ws.delete_cols(1,1)\r\n",
        "wb.save('working.xlsx')\r\n",
        "os.remove('SALESDAILYMIS.xlsx')\r\n",
        "os.rename(\"working.xlsx\",\"SALESDAILYMIS.xlsx\")\r\n",
        "data = pd.read_excel(\"SALESDAILYMIS.xlsx\")\r\n",
        "speciesdata = data[\"Automation Status\"].unique() \r\n",
        "for i in speciesdata: \r\n",
        "    a = data[data[\"Automation Status\"].str.contains(i)] \r\n",
        "    a.to_excel(i+\".xlsx\")\r\n",
        "wb = openpyxl.load_workbook('Problem.xlsx')\r\n",
        "ws = wb['Sheet1']\r\n",
        "ws.delete_cols(1,1)\r\n",
        "ws.delete_cols(6,4)\r\n",
        "ws.delete_cols(8,1)\r\n",
        "ws.delete_cols(11,1)\r\n",
        "wb.save('Automation.xlsx')\r\n",
        "os.remove('Problem.xlsx')\r\n",
        "os.remove('CumulativeOfflineDuration.csv')\r\n",
        "#os.remove('CumulativePumpTankOfflineHistoryReportROCode.csv')\r\n",
        "#os.remove('CumulativeTotvsTankSalesReportDailyROCode.csv')\r\n",
        "os.remove(\"Automation OK.xlsx\")\r\n",
        "os.remove('Turbojet.xlsx')\r\n",
        "os.remove('MS.xlsx')\r\n",
        "os.remove('HSD.xlsx')\r\n",
        "os.remove('Power.xlsx')\r\n",
        "os.remove('CumulativePumpTankOfflineHistoryReportROCode.xlsx')\r\n",
        "os.remove('CumulativeTotvsTankSalesReportDailyROCode.xlsx')\r\n",
        "os.remove('CumulativeOfflineDuration.xlsx')\r\n",
        "os.remove('NEW.csv')\r\n"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}